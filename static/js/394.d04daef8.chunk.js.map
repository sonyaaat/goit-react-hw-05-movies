{"version":3,"file":"static/js/394.d04daef8.chunk.js","mappings":"oRACMA,EAAI,mCACGC,EAAY,WAEtB,OADgBC,EAAAA,EAAAA,IAAA,gEAAmEF,GAErF,EACYG,EAAW,SAACC,GAErB,OADgBF,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4EI,EAA5E,WAEnB,EACYC,EAAY,SAACC,GAEtB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,oBAA8DN,EAA9D,mBAElB,EACYO,EAAS,SAACD,GAEnB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,mBAElB,EACYQ,EAAY,SAACF,GAEtB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,0BAElB,C,4ECpBD,EAAuB,wB,SCoBvB,EAlBkB,SAAC,GAAgB,IAAdS,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,MAAP,OACV,SAAC,KAAD,CACEC,UAAWC,EACXC,MAAO,CAAEC,KAAMP,GACfQ,GAAE,kBAAaZ,GAHjB,SAMGO,GAFIP,EALG,KAYjB,C,2GCDD,EAjBkB,SAAC,GAAkB,IAAhBa,EAAe,EAAfA,SACnB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KASA,OACE,kBAAMH,SANa,SAAAI,GACnBD,EAAc,IACdC,EAAIC,iBACJL,EAASE,EACV,EAEC,WACE,kBAAOI,MAAOJ,EAAYK,KAAK,OAAOC,SAVrB,SAAAJ,GACnBD,EAAcC,EAAIK,cAAcH,MAAMI,cACvC,KASG,mBAAQH,KAAK,SAAb,sBAGL,E,2BCjBD,EAA4B,0BCwC5B,EAlCe,WAAO,IAAD,EACnB,GAAkCN,EAAAA,EAAAA,WAAS,GAA3C,eAAOU,EAAP,KAAkBC,EAAlB,KACA,GAA0BX,EAAAA,EAAAA,UAAS,IAAnC,eAAOhB,EAAP,KAAc4B,EAAd,KACA,GAAkCZ,EAAAA,EAAAA,UAAS,IAA3C,eAAOa,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAChDC,EAAAA,EAAAA,YAAU,WACW,KAAfF,IAGJP,GAAa,IACb5B,EAAAA,EAAAA,IAAWmC,GACRG,MAAK,SAAAC,GACJR,EAAaQ,EAASC,KAAKC,SACU,IAAjCF,EAASC,KAAKC,QAAQC,QACxBC,MAAM,sBAET,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQpB,GAAa,IACzB,GAAE,CAAC3B,EAAOkC,IAMX,OACE,iBAAKxB,UAAWC,EAAhB,UACGe,IAAa,SAACsB,EAAA,EAAD,KACd,SAAC,EAAD,CAAWjC,SARA,SAAAf,GACbiC,EAAgB,CAAEjC,MAAAA,IAClB6C,QAAQC,IAAI9C,GACZ4B,EAAS5B,EACV,KAKG,SAACiD,EAAA,EAAD,CAAW5C,OAAQwB,MAGxB,C","sources":["api.js","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","components/SearchBox/SearchBox.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js"],"sourcesContent":["import axios from 'axios';\nconst KEY=`0d85f901dc2f856c4326c302a68bd324`\nexport const popularList=()=>{\n   const response= axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n   return response\n}\nexport const findByName=(query)=>{\n    const response= axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`)\n    return response\n}\nexport const findDetails=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const findCast=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const findReviews=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response\n}","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieList_link__+cn-g\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from \"../MovieList/MovieList.module.css\"\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <Link\n          className={css.link}\n          state={{ from: location }}\n          to={`/movies/${id}`}\n          key={id}\n        >\n          {title}\n        </Link>\n      ))}\n    </ul>\n  );\n};\nexport default MovieList;\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nconst SearchBox = ({ onSubmit }) => {\n  const [inputMovie, setInputMovie] = useState('');\n  const handleChange = evt => {\n    setInputMovie(evt.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = evt => {\n    setInputMovie('');\n    evt.preventDefault();\n    onSubmit(inputMovie);\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input value={inputMovie} type=\"text\" onChange={handleChange} />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\nexport default SearchBox;\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport MovieList from 'components/MovieList/MovieList';\nimport { findByName } from '../../api';\nimport Loader from 'components/Loader/Loader';\nimport css from \"../Movies/Movies.module.css\"\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [filmsList, setFilmsList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const stateQuery = searchParams.get('query') ?? '';\n  useEffect(() => {\n    if (stateQuery === '') {\n      return;\n    }\n    setIsLoading(true);\n    findByName(stateQuery)\n      .then(response => {\n        setFilmsList(response.data.results);\n        if (response.data.results.length === 0) {\n          alert('There is no results');\n        }\n      })\n      .catch(error => console.log(error))\n      .finally(setIsLoading(false));\n  }, [query, stateQuery]);\n  const onFind = query => {\n    setSearchParams({ query });\n    console.log(query);\n    setQuery(query);\n  };\n  return (\n    <div className={css.container}>\n      {isLoading && <Loader />}\n      <SearchBox onSubmit={onFind} />\n      <MovieList movies={filmsList} />\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["KEY","popularList","axios","findByName","query","findDetails","id","findCast","findReviews","movies","location","useLocation","map","title","className","css","state","from","to","onSubmit","useState","inputMovie","setInputMovie","evt","preventDefault","value","type","onChange","currentTarget","toLowerCase","isLoading","setIsLoading","setQuery","filmsList","setFilmsList","useSearchParams","searchParams","setSearchParams","stateQuery","get","useEffect","then","response","data","results","length","alert","catch","error","console","log","finally","Loader","MovieList"],"sourceRoot":""}