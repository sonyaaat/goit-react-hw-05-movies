{"version":3,"file":"static/js/509.5f7db029.chunk.js","mappings":"oRACMA,EAAI,mCACGC,EAAY,WAEtB,OADgBC,EAAAA,EAAAA,IAAA,gEAAmEF,GAErF,EACYG,EAAW,SAACC,GAErB,OADgBF,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4EI,EAA5E,WAEnB,EACYC,EAAY,SAACC,GAEtB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,oBAA8DN,EAA9D,mBAElB,EACYO,EAAS,SAACD,GAEnB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,mBAElB,EACYQ,EAAY,SAACF,GAEtB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,0BAElB,C,6HCpBD,EAAyB,6BAAzB,EAAkE,gCAAlE,EAA4G,8BAA5G,EAAgJ,0BAAhJ,EAAkL,4BAAlL,EAAqN,2BAArN,EAA+P,mC,kBC8D/P,EAxDqB,WAAO,IAAD,IACnBS,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,MACAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbZ,EAAAA,EAAAA,IAAYM,GACTQ,MAAK,SAAAC,GACJL,EAASK,EAASC,KACnB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQT,GAAa,GACzB,GAAE,CAACN,IACJ,IAAMgB,EAAQ,oBAAGlB,EAASmB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,QACzC,GAAKf,EAAL,CAGA,IAAQgB,EAAgEhB,EAAhEgB,eAAgBC,EAAgDjB,EAAhDiB,YAAaC,EAAmClB,EAAnCkB,aAAcC,EAAqBnB,EAArBmB,SAAUC,EAAWpB,EAAXoB,OAC7D,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAYC,GAAIV,EAAjC,qBAGCX,IAAa,SAACsB,EAAA,EAAD,KACd,iBAAKH,UAAWC,EAAhB,WACE,gBACAD,UAAWC,EACTG,IACER,EAAW,0CAAsCA,GAAgBS,EAEnEC,IAAKX,KAEP,4BACE,wBAAMA,KACN,yCAAiBE,MACjB,sCACA,uBAAIC,KACJ,wBACGC,EAAOQ,KAAI,gBAAGpC,EAAH,EAAGA,GAAIqC,EAAP,EAAOA,KAAP,OACV,eAAIR,UAAWC,EAAf,SAAoCO,GAALrC,EADrB,aAMlB,4BACE,oDACA,SAAC,KAAD,CAAS6B,UAAW,qBAAES,SAA+BR,EAATA,CAAxB,EAAmDC,GAAI,OAA3E,mBACA,SAAC,KAAD,CAASF,UAAW,qBAAES,SAA+BR,EAATA,CAAxB,EAAmDC,GAAI,UAA3E,yBAEF,SAAC,EAAAQ,SAAD,CAAUC,UAAU,SAACR,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAlCL,CAsCF,C","sources":["api.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\nconst KEY=`0d85f901dc2f856c4326c302a68bd324`\nexport const popularList=()=>{\n   const response= axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n   return response\n}\nexport const findByName=(query)=>{\n    const response= axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`)\n    return response\n}\nexport const findDetails=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const findCast=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const findReviews=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response\n}","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__PGjyO\",\"container\":\"MovieDetails_container__o8VqJ\",\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"img\":\"MovieDetails_img__D3WH9\",\"genre\":\"MovieDetails_genre__cfw-I\",\"link\":\"MovieDetails_link__wf74g\",\"link__active\":\"MovieDetails_link__active__8LZh4\"};","import { Suspense, useEffect, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { findDetails } from '../../api';\nimport { Link, Outlet ,NavLink} from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport css from '../MovieDetails/MovieDetails.module.css';\nimport img from '../../default.png';\nconst MovieDetails = () => {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    findDetails(movieId)\n      .then(response => {\n        setMovie(response.data);\n      })\n      .catch(error => console.log(error))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n  const backLink = location.state?.from ?? '/home';\n  if (!movie) {\n    return;\n  }\n  const { original_title, poster_path, vote_average, overview, genres } = movie;\n  return (\n    <div className={css.container}>\n      <Link className={css.button} to={backLink}>\n        Go back\n      </Link>\n      {isLoading && <Loader />}\n      <div className={css.wrapper}>\n        <img\n        className={css.img}\n          src={\n            poster_path ? `https://image.tmdb.org/t/p/w300/${poster_path}` : img\n          }\n          alt={original_title}\n        />\n        <div>\n          <h2 >{original_title}</h2>\n          <p>User score : {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <ul>\n            {genres.map(({ id, name }) => (\n              <li className={css.genre} key={id}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div>\n        <h2>Additional Information</h2>\n        <NavLink className={({isActive})=>!isActive?css.link:css.link__active} to={'cast'}>Cast</NavLink>\n        <NavLink className={({isActive})=>!isActive?css.link:css.link__active} to={'reviews'}>Reviews</NavLink>\n      </div>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["KEY","popularList","axios","findByName","query","findDetails","id","findCast","findReviews","location","useLocation","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","useEffect","then","response","data","catch","error","console","log","finally","backLink","state","from","original_title","poster_path","vote_average","overview","genres","className","css","to","Loader","src","img","alt","map","name","isActive","Suspense","fallback"],"sourceRoot":""}