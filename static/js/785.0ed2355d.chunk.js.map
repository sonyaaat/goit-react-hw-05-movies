{"version":3,"file":"static/js/785.0ed2355d.chunk.js","mappings":"oRACMA,EAAI,mCACGC,EAAY,WAEtB,OADgBC,EAAAA,EAAAA,IAAA,gEAAmEF,GAErF,EACYG,EAAW,SAACC,GAErB,OADgBF,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4EI,EAA5E,WAEnB,EACYC,EAAY,SAACC,GAEtB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,oBAA8DN,EAA9D,mBAElB,EACYO,EAAS,SAACD,GAEnB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,mBAElB,EACYQ,EAAY,SAACF,GAEtB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,0BAElB,C,uFCkBD,UAlCgB,WACd,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IAPAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbL,EAAAA,EAAAA,IAAYM,GACTG,MAAK,SAAAC,GAAQ,OAAIP,EAAWO,EAASC,KAAKC,QAA7B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQZ,GAAa,GACzB,GAAE,CAACH,EAASI,IACRJ,EAGL,OACE,gCACGE,IAAa,SAAC,IAAD,IACbF,EAAQgB,OAAS,GAChB,wBACGhB,EAAQiB,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,0BACE,mCADF,IACkBD,MAElB,6BAAKC,OAJEvB,EADE,OAUf,sEAIP,C","sources":["api.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\nconst KEY=`0d85f901dc2f856c4326c302a68bd324`\nexport const popularList=()=>{\n   const response= axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n   return response\n}\nexport const findByName=(query)=>{\n    const response= axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`)\n    return response\n}\nexport const findDetails=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const findCast=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const findReviews=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response\n}","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { findReviews } from '../../api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    findReviews(movieId)\n      .then(response => setReviews(response.data.results))\n      .catch(error => console.log(error))\n      .finally(setIsLoading(false));\n  }, [reviews, movieId]);\n  if (!reviews) {\n    return;\n  }\n  return (\n    <>\n      {isLoading && <Loader />}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>\n                <b>Author:</b> {author}\n              </p>\n              <p> {content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["KEY","popularList","axios","findByName","query","findDetails","id","findCast","findReviews","useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","then","response","data","results","catch","error","console","log","finally","length","map","author","content"],"sourceRoot":""}