{"version":3,"file":"static/js/541.1082f4c4.chunk.js","mappings":"oRACMA,EAAI,mCACGC,EAAY,WAEtB,OADgBC,EAAAA,EAAAA,IAAA,gEAAmEF,GAErF,EACYG,EAAW,SAACC,GAErB,OADgBF,EAAAA,EAAAA,IAAA,4DAA+DF,EAA/D,kBAA4EI,EAA5E,WAEnB,EACYC,EAAY,SAACC,GAEtB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,oBAA8DN,EAA9D,mBAElB,EACYO,EAAS,SAACD,GAEnB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,mBAElB,EACYQ,EAAY,SAACF,GAEtB,OADeJ,EAAAA,EAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,0BAElB,C,gGC2BD,UA3Ca,WACX,OAAwBS,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,IARAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbN,EAAAA,EAAAA,IAASO,GACNG,MAAK,SAAAC,GAAQ,OAAIP,EAAQO,EAASC,KAAKT,KAA1B,IACbU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQX,GAAa,GACzB,GAAE,CAACH,EAAMI,IAELJ,EAGL,OACE,gCACGE,IAAa,SAAC,IAAD,KACd,wBACGF,EAAKe,KAAI,YAAqD,IAAlDnB,EAAiD,EAAjDA,GAAIoB,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC5C,OACE,2BACE,gBACAC,MAAO,IACPC,OAAQ,IACNC,IACEJ,EAAY,0CAC2BA,GACnCK,EAENC,IAAKP,KAEP,wBACE,uBAAIA,OAEN,uCAAeE,OAdRtB,EAiBZ,QAIR,C","sources":["api.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\nconst KEY=`0d85f901dc2f856c4326c302a68bd324`\nexport const popularList=()=>{\n   const response= axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`)\n   return response\n}\nexport const findByName=(query)=>{\n    const response= axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${query}&page=1`)\n    return response\n}\nexport const findDetails=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const findCast=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`)\n    return response\n}\nexport const findReviews=(id)=>{\n    const response=axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response\n}","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { findCast } from '../../api';\nimport img from '../../default.png';\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    findCast(movieId)\n      .then(response => setCast(response.data.cast))\n      .catch(error => console.log(error))\n      .finally(setIsLoading(false));\n  }, [cast, movieId]);\n\n  if (!cast) {\n    return;\n  }\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul>\n        {cast.map(({ id, original_name, profile_path, character }) => {\n          return (\n            <li key={id}>\n              <img\n              width={200}\n              height={300}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${profile_path}`\n                    : img\n                }\n                alt={original_name}\n              />\n              <p>\n                <b>{original_name}</b>\n              </p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n"],"names":["KEY","popularList","axios","findByName","query","findDetails","id","findCast","findReviews","useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","then","response","data","catch","error","console","log","finally","map","original_name","profile_path","character","width","height","src","img","alt"],"sourceRoot":""}